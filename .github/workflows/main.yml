name: CI

on: push

env:
  CONTAINER_IMAGE_NAME: ${{ github.repository }}
  GH_CONTAINER_IMAGE_REGISTRY: ghcr.io

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          CONTAINER_IMAGE=$CONTAINER_IMAGE_NAME
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          if [ "${{ github.event_name }}" = "schedule" ]; then
            VERSION=nightly
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=latest
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${CONTAINER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            MINOR=${VERSION%.*}
            MAJOR=${MINOR%.*}
            TAGS="$TAGS,${CONTAINER_IMAGE}:${MINOR},${CONTAINER_IMAGE}:${MAJOR},${CONTAINER_IMAGE}:latest"
          elif [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${CONTAINER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Build container image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "$default-branch" ] && VERSION=latest

          buildah bud --format=docker \
            --label org.opencontainers.image.title="$CONTAINER_IMAGE_NAME" \
            --label org.opencontainers.image.description="${{ github.event.repository.description }}" \
            --label org.opencontainers.image.url="${{ github.event.repository.html_url }}" \
            --label org.opencontainers.image.source="${{ github.event.repository.html_url }}" \
            --label org.opencontainers.image.version="${{ steps.prep.outputs.version }}" \
            --label org.opencontainers.image.created="${{ steps.prep.outputs.created }}" \
            --label org.opencontainers.image.revision="${{ github.sha }}" \
            --label org.opencontainers.image.licenses="${{ github.event.repository.license.spdx_id }}" \ -t $CONTAINER_IMAGE_NAME .
      
      - name: Push image to GitHub Container Registry
        run: |
          echo ${{ secrets.CR_PAT }} | buildah login -u ${{ github.actor }} --password-stdin $GH_CONTAINER_IMAGE_REGISTRY
  
          buildah tag $CONTAINER_IMAGE_NAME $GH_CONTAINER_IMAGE_REGISTRY/${{ steps.prep.outputs.tags }}
          buildah push $GH_CONTAINER_IMAGE_REGISTRY/${{ steps.prep.outputs.tags }}